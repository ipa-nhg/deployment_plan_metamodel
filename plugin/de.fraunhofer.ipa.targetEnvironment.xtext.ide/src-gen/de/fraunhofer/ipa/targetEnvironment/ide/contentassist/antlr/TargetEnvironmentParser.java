/*
 * generated by Xtext 2.30.0
 */
package de.fraunhofer.ipa.targetEnvironment.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.fraunhofer.ipa.targetEnvironment.ide.contentassist.antlr.internal.InternalTargetEnvironmentParser;
import de.fraunhofer.ipa.targetEnvironment.services.TargetEnvironmentGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class TargetEnvironmentParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(TargetEnvironmentGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, TargetEnvironmentGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getConnectionAccess().getAlternatives(), "rule__Connection__Alternatives");
			builder.put(grammarAccess.getCapabilityKindAccess().getAlternatives(), "rule__CapabilityKind__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getGroup(), "rule__TargetDeployEnviroment__Group__0");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getGroup_4(), "rule__TargetDeployEnviroment__Group_4__0");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getGroup_4_3(), "rule__TargetDeployEnviroment__Group_4_3__0");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getGroup_5(), "rule__TargetDeployEnviroment__Group_5__0");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getGroup_5_3(), "rule__TargetDeployEnviroment__Group_5_3__0");
			builder.put(grammarAccess.getDeviceInstanceAccess().getGroup(), "rule__DeviceInstance__Group__0");
			builder.put(grammarAccess.getConfigConnectionAccess().getGroup(), "rule__ConfigConnection__Group__0");
			builder.put(grammarAccess.getConfigConnectionAccess().getGroup_6(), "rule__ConfigConnection__Group_6__0");
			builder.put(grammarAccess.getDeviceTypeAccess().getGroup(), "rule__DeviceType__Group__0");
			builder.put(grammarAccess.getDeviceTypeAccess().getGroup_4(), "rule__DeviceType__Group_4__0");
			builder.put(grammarAccess.getDeviceTypeAccess().getGroup_4_3(), "rule__DeviceType__Group_4_3__0");
			builder.put(grammarAccess.getDeviceTypeAccess().getGroup_5(), "rule__DeviceType__Group_5__0");
			builder.put(grammarAccess.getDeviceTypeAccess().getGroup_5_3(), "rule__DeviceType__Group_5_3__0");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getGroup(), "rule__CapabilityProperty__Group__0");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getGroup_3(), "rule__CapabilityProperty__Group_3__0");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getGroup_3_3(), "rule__CapabilityProperty__Group_3_3__0");
			builder.put(grammarAccess.getAttributeKindAccess().getGroup(), "rule__AttributeKind__Group__0");
			builder.put(grammarAccess.getMaximumKindAccess().getGroup(), "rule__MaximumKind__Group__0");
			builder.put(grammarAccess.getMinimumKindAccess().getGroup(), "rule__MinimumKind__Group__0");
			builder.put(grammarAccess.getSelectionKindAccess().getGroup(), "rule__SelectionKind__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup(), "rule__Property__Group__0");
			builder.put(grammarAccess.getPropertyAccess().getGroup_4(), "rule__Property__Group_4__0");
			builder.put(grammarAccess.getIndirectConnectionAccess().getGroup(), "rule__IndirectConnection__Group__0");
			builder.put(grammarAccess.getIndirectConnectionAccess().getGroup_4(), "rule__IndirectConnection__Group_4__0");
			builder.put(grammarAccess.getIndirectConnectionAccess().getGroup_4_3(), "rule__IndirectConnection__Group_4_3__0");
			builder.put(grammarAccess.getDirectConnectionAccess().getGroup(), "rule__DirectConnection__Group__0");
			builder.put(grammarAccess.getDirectConnectionAccess().getGroup_4(), "rule__DirectConnection__Group_4__0");
			builder.put(grammarAccess.getDirectConnectionAccess().getGroup_4_3(), "rule__DirectConnection__Group_4_3__0");
			builder.put(grammarAccess.getConnectedDeviceAccess().getGroup(), "rule__ConnectedDevice__Group__0");
			builder.put(grammarAccess.getConnectedDeviceAccess().getGroup_6(), "rule__ConnectedDevice__Group_6__0");
			builder.put(grammarAccess.getConnectedDeviceAccess().getGroup_6_3(), "rule__ConnectedDevice__Group_6_3__0");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getNameAssignment_2(), "rule__TargetDeployEnviroment__NameAssignment_2");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getIncludeDeviceAssignment_4_2(), "rule__TargetDeployEnviroment__IncludeDeviceAssignment_4_2");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getIncludeDeviceAssignment_4_3_1(), "rule__TargetDeployEnviroment__IncludeDeviceAssignment_4_3_1");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getConfigConnectionAssignment_5_2(), "rule__TargetDeployEnviroment__ConfigConnectionAssignment_5_2");
			builder.put(grammarAccess.getTargetDeployEnviromentAccess().getConfigConnectionAssignment_5_3_1(), "rule__TargetDeployEnviroment__ConfigConnectionAssignment_5_3_1");
			builder.put(grammarAccess.getDeviceInstanceAccess().getNameAssignment_1(), "rule__DeviceInstance__NameAssignment_1");
			builder.put(grammarAccess.getDeviceInstanceAccess().getRefDeviceTypeAssignment_4(), "rule__DeviceInstance__RefDeviceTypeAssignment_4");
			builder.put(grammarAccess.getConfigConnectionAccess().getNameAssignment_1(), "rule__ConfigConnection__NameAssignment_1");
			builder.put(grammarAccess.getConfigConnectionAccess().getConnectDeviceAssignment_5(), "rule__ConfigConnection__ConnectDeviceAssignment_5");
			builder.put(grammarAccess.getConfigConnectionAccess().getConnectDeviceAssignment_6_1(), "rule__ConfigConnection__ConnectDeviceAssignment_6_1");
			builder.put(grammarAccess.getDeviceTypeAccess().getNameAssignment_2(), "rule__DeviceType__NameAssignment_2");
			builder.put(grammarAccess.getDeviceTypeAccess().getCapabilitiesAssignment_4_2(), "rule__DeviceType__CapabilitiesAssignment_4_2");
			builder.put(grammarAccess.getDeviceTypeAccess().getCapabilitiesAssignment_4_3_1(), "rule__DeviceType__CapabilitiesAssignment_4_3_1");
			builder.put(grammarAccess.getDeviceTypeAccess().getConnectionAssignment_5_2(), "rule__DeviceType__ConnectionAssignment_5_2");
			builder.put(grammarAccess.getDeviceTypeAccess().getConnectionAssignment_5_3_1(), "rule__DeviceType__ConnectionAssignment_5_3_1");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getNameAssignment_1(), "rule__CapabilityProperty__NameAssignment_1");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getValueAssignment_3_2(), "rule__CapabilityProperty__ValueAssignment_3_2");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getValueAssignment_3_3_1(), "rule__CapabilityProperty__ValueAssignment_3_3_1");
			builder.put(grammarAccess.getCapabilityPropertyAccess().getKindAssignment_5(), "rule__CapabilityProperty__KindAssignment_5");
			builder.put(grammarAccess.getPropertyAccess().getNameAssignment_2(), "rule__Property__NameAssignment_2");
			builder.put(grammarAccess.getPropertyAccess().getValueAssignment_4_1(), "rule__Property__ValueAssignment_4_1");
			builder.put(grammarAccess.getIndirectConnectionAccess().getNameAssignment_2(), "rule__IndirectConnection__NameAssignment_2");
			builder.put(grammarAccess.getIndirectConnectionAccess().getPropertiesAssignment_4_2(), "rule__IndirectConnection__PropertiesAssignment_4_2");
			builder.put(grammarAccess.getIndirectConnectionAccess().getPropertiesAssignment_4_3_1(), "rule__IndirectConnection__PropertiesAssignment_4_3_1");
			builder.put(grammarAccess.getDirectConnectionAccess().getNameAssignment_2(), "rule__DirectConnection__NameAssignment_2");
			builder.put(grammarAccess.getDirectConnectionAccess().getPropertiesAssignment_4_2(), "rule__DirectConnection__PropertiesAssignment_4_2");
			builder.put(grammarAccess.getDirectConnectionAccess().getPropertiesAssignment_4_3_1(), "rule__DirectConnection__PropertiesAssignment_4_3_1");
			builder.put(grammarAccess.getConnectedDeviceAccess().getRefDeviceAssignment_3(), "rule__ConnectedDevice__RefDeviceAssignment_3");
			builder.put(grammarAccess.getConnectedDeviceAccess().getRefConnectionAssignment_5(), "rule__ConnectedDevice__RefConnectionAssignment_5");
			builder.put(grammarAccess.getConnectedDeviceAccess().getPropertiesAssignment_6_2(), "rule__ConnectedDevice__PropertiesAssignment_6_2");
			builder.put(grammarAccess.getConnectedDeviceAccess().getPropertiesAssignment_6_3_1(), "rule__ConnectedDevice__PropertiesAssignment_6_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private TargetEnvironmentGrammarAccess grammarAccess;

	@Override
	protected InternalTargetEnvironmentParser createParser() {
		InternalTargetEnvironmentParser result = new InternalTargetEnvironmentParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public TargetEnvironmentGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(TargetEnvironmentGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
